/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define     MASTER_1     0
#define     MASTER_2     1
#define     SYM_1        2
#define     SYM_2        3
#define     F_KEYS       4
#define     MEDIA        5
#define     KB_FUNK      6

&lt {
    flavor = "tap-preferred";
    quick-tap-ms = <0>;
    tapping-term-ms = <200>;
};

&caps_word { continue-list = <UNDERSCORE MINUS BSPC DEL N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>; };

/ {
    behaviors {
        gqt: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            bindings = <&shifted>, <&kp>;

            flavor = "tap-preferred";
        };

        ara_ht: autoralt_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTORALT_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            bindings = <&ralted>, <&kp>;

            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <10 19>;
            layers = <0 1>;
        };

        colmak {
            bindings = <&to 0>;
            key-positions = <4 5>;
            layers = <1 7>;
        };

        qwerty {
            bindings = <&to 1>;
            key-positions = <4 5>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
            layers = <0 1 2 3 4 5 6>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <2 3>;
            layers = <0 2 3 1 4 5 6>;
        };

        tab_2 {
            bindings = <&kp TAB>;
            key-positions = <16 17>;
            layers = <0 1 2 3 4 5 6>;
        };

        esc_2 {
            bindings = <&kp ESCAPE>;
            key-positions = <6 7>;
            layers = <0 1 2 3 4 5 6>;
        };
    };

    macros {
        screen: screen1 {
            label = "ZM_screen";
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>; // Must be 2
            bindings =
                <&bt BT_SEL 1>,
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp R>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_wait_time 250>,
                <&macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&kp ESC &macro_param_2to2 &bt BT_SEL MACRO_PLACEHOLDER>;
        };

        shifted: macro_shifted_kp {
            #binding-cells = <1>;
            label = "MACRO_SHIFTED_KP";
            compatible = "zmk,behavior-macro-one-param";
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            label = "AUTOSHIFT_KP";
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };

        ralted: macro_ralted_kp {
            #binding-cells = <1>;
            label = "MACRO_RALTED_KP";
            compatible = "zmk,behavior-macro-one-param";
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp RIGHT_ALT>;
        };

        ara: autoralt {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            label = "AUTORALT_KP";
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &ara_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &ara_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };

        alta: alta {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_A>
                , <&macro_release &kp LALT>
                ;

            label = "ALTA";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        master_1 {
            bindings = <
&kp Q   &kp W         &kp F   &kp P              &kp B             &kp J              &ara L              &kp U      &kp Y         &as SEMICOLON
&ara A  &gqt LCTRL R  &ara S  &kp T              &gqt LEFT_META G  &gqt RIGHT_META M  &ara N              &ara E     &gqt RCTRL I  &ara O
&ara Z  &ara X        &ara C  &gqt LEFT_SHIFT D  &gqt LEFT_ALT V   &gqt LEFT_ALT K    &gqt RIGHT_SHIFT H  &as COMMA  &as PERIOD    &as SLASH
                              &lt 4 ENTER        &lt 2 BACKSPACE   &lt 2 SPACE        &lt 4 DELETE
            >;
        };

        master_2 {
            bindings = <
&kp Q              &kp W        &kp E         &kp R        &kp T            &kp Y        &kp U         &kp I         &kp O        &kp P
&gqt LEFT_SHIFT A  &gqt RALT S  &gqt LCTRL D  &gqt LGUI F  &gqt LALT G      &gqt LALT H  &gqt RGUI J   &gqt RCTRL K  &gqt RALT L  &gqt RIGHT_SHIFT SEMICOLON
&kp Z              &kp X        &kp C         &kp V        &kp B            &kp N        &kp M         &kp COMMA     &kp DOT      &kp SLASH
                                              &lt 4 ENTER  &lt 2 BACKSPACE  &lt 2 SPACE  &lt 4 DELETE
            >;
        };

        symbols_1 {
            bindings = <
&kp EXCLAMATION  &kp AT       &kp HASH   &kp PIPE        &kp BSLH         &kp FSLH     &kp N7        &kp N8  &kp N9        &kp N0
&kp DOLLAR       &kp PERCENT  &kp CARET  &as MINUS       &as SQT          &kp COMMA    &kp NUMBER_4  &kp N5  &kp NUMBER_6  &as MINUS
&kp AMPS         &kp STAR     &kp PLUS   &kp UNDERSCORE  &kp SLASH        &kp PERIOD   &kp N1        &kp N2  &kp N3        &as EQUAL
                                         &lt 5 ENTER     &lt 3 BACKSPACE  &lt 3 SPACE  &lt 6 DEL
            >;
        };

        symbols_2 {
            bindings = <
&kp TILDE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LT          &kp GT           &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &kp INS
&kp ESC    &as LEFT_BRACKET      &as RIGHT_BRACKET      &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &as TAB
&kp LSHFT  &kp LALT              &kp LCTRL              &kp LGUI        &none            &none      &kp RGUI   &kp RCTRL  &kp LALT   &kp RIGHT_SHIFT
                                                        &kp ENTER       &kp BACKSPACE    &kp SPACE  &kp DEL
            >;
        };

        f_keys {
            bindings = <
&kp F1     &kp F2    &kp F3     &kp F4     &kp F5             &kp F6             &kp F7    &kp F8     &kp F9    &kp F10
&kp LSHFT  &kp RALT  &kp LCTRL  &kp LGUI   &gqt LEFT_ALT F11  &gqt LEFT_ALT F12  &kp RGUI  &kp RCTRL  &kp RALT  &kp RSHFT
&kp LEFT   &kp DOWN  &kp UP     &kp RIGHT  &none              &none              &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT
                                &none      &none              &none              &none
            >;
        };

        media {
            bindings = <
&kp PRINTSCREEN  &none       &kp K_NEXT        &kp K_VOL_UP  &none  &none  &none  &none  &none  &none
&none            &kp K_STOP  &kp K_PLAY_PAUSE  &kp K_MUTE    &none  &none  &none  &none  &none  &none
&none            &none       &kp K_PREVIOUS    &kp K_VOL_DN  &none  &none  &none  &none  &none  &none
                                               &none         &none  &none  &none
            >;
        };

        kb_func {
            bindings = <
&none  &none  &none  &none  &none  &none  &screen N1 1  &screen N2 2  &out OUT_TOG  &bt BT_CLR
&none  &none  &none  &none  &none  &none  &bt BT_SEL 4  &none         &none         &none
&none  &none  &none  &none  &none  &none  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 0
                     &none  &none  &none  &none
            >;
        };

        layer_7 {
            bindings = <
&kp Z  &kp LEFT  &kp UP_ARROW  &kp RIGHT  &none  &kp ESC  &none  &none  &none  &kp Z
&kp Z  &kp LEFT  &kp DOWN      &kp RIGHT  &none  &none    &kp X  &kp A  &kp X  &kp Z
&kp Z  &none     &kp C         &none      &none  &none    &kp Y  &kp A  &kp Y  &kp Z
                               &none      &kp X  &kp Y    &none
            >;
        };
    };
};
