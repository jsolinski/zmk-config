/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/outputs.h>

#define     MASTER_1     0
#define     MASTER_2     1
#define     SYM_1        2
#define     SYM_2        3
#define     F_KEYS       4
#define     MEDIA        5
#define     KB_FUNK      6

&lt {
    flavor = "balanced";
    tapping_term_ms = <200>;
    quick-tap-ms = <150>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC DEL N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>;
};

/ {
    behaviors {
        gqt: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <10 19>;
            layers = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        master_1 {
            bindings = <
            &kp Q        &kp W         &kp F            &kp P            &kp B        &kp J             &kp L         &kp U        &kp Y       &kp SEMICOLON
&gqt LEFT_SHIFT A  &gqt RALT R  &gqt LCTRL S  &gqt LEFT_ALT T            &kp G        &kp M  &gqt RIGHT_ALT N  &gqt RCTRL E  &gqt RALT I  &gqt RIGHT_SHIFT O
            &kp Z        &kp X         &kp C      &gqt LGUI D            &kp V        &kp K       &gqt RGUI H     &kp COMMA      &kp DOT           &kp SLASH
                                                  &lt 4 ENTER  &lt 2 BACKSPACE  &lt 2 SPACE      &lt 4 DELETE
            >;
        };

        master_2 {
            bindings = <
            &kp Q        &kp W         &kp E            &kp R            &kp T        &kp Y             &kp U         &kp I        &kp O                       &kp P
&gqt LEFT_SHIFT A  &gqt RALT S  &gqt LCTRL D  &gqt LEFT_ALT F            &kp G        &kp H  &gqt RIGHT_ALT J  &gqt RCTRL K  &gqt RALT L  &gqt RIGHT_SHIFT SEMICOLON
            &kp Z        &kp X         &kp C      &gqt LGUI V            &kp B        &kp N       &gqt RGUI M     &kp COMMA      &kp DOT                   &kp SLASH
                                                  &lt 4 ENTER  &lt 2 BACKSPACE  &lt 2 SPACE      &lt 4 DELETE
            >;
        };

        symbols_1 {
            bindings = <
&kp EXCLAMATION        &kp AT      &kp HASH    &kp DOLLAR        &kp PRCNT         &kp CARET           &kp AMPS     &kp ASTRK      &kp PIPE      &kp UNDER
   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4     &kp NUMBER_5      &kp NUMBER_6       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9   &kp NUMBER_0
      &kp ASTRK     &kp SLASH      &kp PLUS     &kp MINUS        &kp EQUAL  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES     &kp COMMA       &kp DOT  &kp BACKSLASH
                                              &lt 5 ENTER  &lt 3 BACKSPACE       &lt 3 SPACE          &lt 6 DEL
            >;
        };

        symbols_2 {
            bindings = <
&kp TILDE  &kp RBRC  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS         &kp GT  &kp INSERT  &kp HOME  &kp PG_UP  &kp PG_DN          &kp END
  &kp ESC  &kp LBRC   &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS         &kp LT    &kp LEFT  &kp DOWN     &kp UP  &kp RIGHT          &kp TAB
&kp LSHFT  &kp LALT          &kp LCTRL               &kp LGUI          &none       &none  &kp RGUI  &kp RCTRL   &kp LALT  &kp RIGHT_SHIFT
                                                    &kp ENTER  &kp BACKSPACE   &kp SPACE   &kp DEL
            >;
        };

        f_keys {
            bindings = <
        &kp F1         &kp F2            &kp F3        &kp F4   &kp F5   &kp F6        &kp F6             &kp F8         &kp F9          &kp F10
&kp LEFT_SHIFT  &kp RIGHT_ALT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp F11  &kp F12  &kp LEFT_ALT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_SHIFT
         &none          &none             &none         &none    &none    &none         &none              &none          &none            &none
                                                        &none    &none    &none         &none
            >;
        };

        media {
            bindings = <
&kp PRINTSCREEN       &none        &kp K_NEXT  &kp K_VOL_UP  &none  &none  &none  &none  &none  &none
          &none  &kp K_STOP  &kp K_PLAY_PAUSE    &kp K_MUTE  &none  &none  &none  &none  &none  &none
          &none       &none    &kp K_PREVIOUS  &kp K_VOL_DN  &none  &none  &none  &none  &none  &none
                                                      &none  &none  &none  &none
            >;
        };

        kb_func {
            bindings = <
  &bt BT_PRV    &bt BT_CLR    &bt BT_NXT     &bl BL_ON  &none  &none  &none  &none  &none  &none
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none  &none  &none  &none  &none  &none
&out OUT_BLE  &out OUT_TOG  &out OUT_USB  &bt BT_SEL 4  &none  &none  &none  &none  &none  &none
                                                 &none  &none  &none  &none
            >;
        };
    };
};
