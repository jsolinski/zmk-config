/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>


&lt {
   flavor = "balanced";
   tapping_term_ms = <800>;
};

/ {
    behaviors {
       hm_l: left_hand_positional_hold_tap {
           compatible = "zmk,behavior-hold-tap";
           label = "POSITIONAL_HOLD_TAP_LEFT";
           #binding-cells = <2>;
           flavor = "tap-unless-interrupted";
           tapping-term-ms = <800>;                        
           bindings = <&kp>, <&kp>;
           hold-trigger-key-positions = <5 6 7 8 9  15 16 17 18 19  25 26 27 28 29  30 31 32 33>;    // <---[[right-hand keys + thumbs]]
       };
       hm_r: right_hand_positional_hold_tap {
           compatible = "zmk,behavior-hold-tap";
           label = "POSITIONAL_HOLD_TAP_RIGHT";
           #binding-cells = <2>;
           flavor = "tap-unless-interrupted";
           tapping-term-ms = <800>;                        
           bindings = <&kp>, <&kp>;
           hold-trigger-key-positions = <0 1 2 3 4  10 11 12 13 14  20 21 22 23 24  30 31 32 33>;    // <---[[left-hand keys + thumbs]]
       };
    };

    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <10 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        master {
            bindings = <
        &kp Q       &kp W        &kp F            &kp P        &kp B      &kp J            &kp L        &kp U       &kp Y      &kp SEMICOLON
        &hm_l LSHIFT A  &hm_l RALT R  &hm_l LCTRL S   &hm_l LEFT_ALT T        &kp G      &kp M  &hm_r RIGHT_ALT N  &hm_r RCTRL E  &hm_r RALT I  &hm_r RIGHT_SHIFT O
        &lt 3 Z       &kp X        &kp C       &hm_l LGUI D        &kp V      &kp K       &hm_r RGUI H    &kp COMMA     &kp DOT        &lt 3 SLASH
                                        &lt 1 BACKSPACE  &lt 2 ENTER  &lt 2 DEL      &lt 1 SPACE
            >;
        };

        symbols_1 {
            bindings = <
 &kp EXCLAMATION        &kp AT      &kp HASH    &kp DOLLAR     &kp PRCNT          &kp CARET          &kp AMPS     &kp ASTRK      &kp PIPE      &kp UNDER
    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5       &kp NUMBER_6      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9   &kp NUMBER_0
       &kp ASTRK     &kp SLASH      &kp PLUS     &kp MINUS     &kp EQUAL  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE     &kp COMMA       &kp DOT  &kp BACKSLASH
                                                 &lt 3 ESC      &kp LGUI           &kp RGUI         &lt 3 ESC
            >;
        };

        symbols_2 {
            bindings = <
   &kp TAB  &kp RBRC  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS      &kp GT     &kp INSERT  &kp HOME  &kp INSERT  &kp PG_DN          &kp END
   &kp ESC  &kp LBRC   &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS      &kp LT       &kp LEFT  &kp DOWN      &kp UP  &kp RIGHT        &kp ENTER
 &kp LSHFT  &kp LALT          &kp LCTRL               &kp LGUI  &kp DELETE  &kp BACKSPACE  &kp RGUI   &kp RCTRL   &kp LALT  &kp RIGHT_SHIFT
                                                         &mo 3    &kp LCTL        &kp SPC     &mo 2
            >;
        };

        tri_layer {
            bindings = <
     &none      &none     &none     &none    &none    &none     &none     &none      &none      &none
    &kp F1     &kp F2    &kp F3    &kp F4   &kp F5   &kp F6    &kp F7    &kp F8     &kp F9     &kp F9
 &kp LSHFT  &kp LCTRL  &kp LALT  &kp RALT  &kp F11  &kp F12  &kp RALT  &kp LALT  &kp RCTRL  &kp RSHFT
                                    &mo 4    &mo 5    &mo 5     &mo 4
            >;
        };

        media {
            bindings = <
  &none       &none        &kp K_NEXT  &kp K_VOL_UP  &kp PRINTSCREEN   &none        &none   &none   &none   &none
  &none  &kp K_STOP  &kp K_PLAY_PAUSE    &kp K_MUTE            &none   &none        &none   &none   &none   &none
  &none       &none    &kp K_PREVIOUS  &kp K_VOL_DN            &none   &none        &none   &none   &none   &none
                                              &none            &none   &none  &bootloader
            >;
        };

        kb_func {
            bindings = <
 &out OUT_BLE   &none   &none   &none   &none   &none   &none   &none   &none  &bootloader
 &out OUT_TOG   &none   &none   &none   &none   &none   &none   &none   &none        &none
 &out OUT_USB   &none   &none   &none   &none   &none   &none   &none   &none        &none
                                &none   &none   &none   &none
            >;
        };
    };
};
